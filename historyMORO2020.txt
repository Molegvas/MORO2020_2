.LOG

Важно!
В отличие от CP2101/CP2102, микросхемы CP2104 поставляются с уже прописанным уникальным
серийным номером. Таким образом, вышеописанная проблема решена автоматически.
Однако, есть ситуация, когда наличие уникального серийного номера усложняет жизнь пользователю.
Например, требуетя протестировать партию изделий, в которых используется микросхема CP2104. При
подключении к компьютеру очередной платы Windows добросовестно присвоит плате новый номер COM-
порта, что каждый раз влечет за собой изменение установок номера COM-порта в программе, которая
работает с изделием.

В таком случае, можно запретить Windows назначать новые номера портов для изделий с микросхемой
CP2104. Это делается добавлением в реестр Windows следующей строки:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\UsbFlags\IgnoreHWSerNum10C4EA60
Для этого нужно кликнуть правой кнопкой мыши на папке “usbflags” и выбрать New-> Binary Key.
Затем изменить имя строки на IgnoreHWSerNum10C4EA60 и установить значение параметра Binary Key 1
	Замечание: рекомендуется использовать предложенный метод на компьютерах с портами USB 2.0.
Метод может не работать на компьютерах с портами USB3, особенно, если USB3 не встроен в чипсет, а
реализован на выделенном контроллере.
Источник: https://docviewer.yandex.ru/view/120675444/?page=2&*=z9pbguGheOPL7okhY1T34IA4Ik97InVybCI6Imh0dHBzOi8vd3d3LmFzLWtpdC5ydS9kb2NzLXBkZi9BU0lTUC9BU3hFX0NPTS1wb3J0X3NldHRpbmcucGRmIiwidGl0bGUiOiJBU3hFX0NPTS1wb3J0X3NldHRpbmcucGRmIiwibm9pZnJhbWUiOnRydWUsInVpZCI6IjEyMDY3NTQ0NCIsInRzIjoxNTY4MzY2NzY0MzczLCJ5dSI6IjM3MzEzMzM0MzE1NTQwMTIyMjgiLCJzZXJwUGFyYW1zIjoibGFuZz1ydSZ0bT0xNTY4MzY2NjIxJnRsZD1ydSZuYW1lPUFTeEVfQ09NLXBvcnRfc2V0dGluZy5wZGYmdGV4dD1DUDIxMDQrQ1AyMTAyKyVEMCVCRSVEMSU4MiVEMCVCQiVEMCVCOCVEMSU4NyVEMCVCOCVEMSU4RiZ1cmw9aHR0cHMlM0EvL3d3dy5hcy1raXQucnUvZG9jcy1wZGYvQVNJU1AvQVN4RV9DT00tcG9ydF9zZXR0aW5nLnBkZiZscj05NjkmbWltZT1wZGYmbDEwbj1ydSZzaWduPTIyOTZlZjQ2YzEyMDU1NDFjNTA0MjdkM2Y4NTYxZTIyJmtleW5vPTAifQ%3D%3D&lang=ru


19:24 20.11.2019
Плата MORO2020v22 с исправлениями:
в цепь VDDUSB врезан диод
R86 2,7кОм вместо 5в на вход 1117 подается 6 вольт

Модуль ESP32 прошит DOWNLOADERом и запаян, 
под модулем термопрокладка для облегчения последующей отпайки.
OLED 1.3" - заменен разъем на угловой

Включение - подача питания 17 вольт через выводы на клеммы.
WiFi 192.168.244.1	- ок
WiFi 192.168.0.5	- ок
Вывод на индикатор	- ок
RGB светодиод		- ок
датчик температуры	- ок
опрос кнопок		- ок
кнопка сброса		- ок?

10:05 21.11.2019
питание через USB	- ок
USB терминал		- ок 

16:28 21.11.2019
Внешнее питание 17.6в заведено на /7, /8 TV2
LED2(R)			- ок
LED3(G) проверено, нет	- ок
Вентилятор 470uF/25v	- ок 20кГц, 16в мах? При перегреве показывает -273 - исправить?
Пульсации на измерениях - земля?

14:41 09.12.2019
Распайка ACS712 сменилась, ток инвертируется:
void MBoard::calcCurrent( int ivalue ) {
#ifndef V22    
    current = ( readVoltage( ivalue ) * acs712Multiplier + acs712Offset ) * currentMultiplier + currentOffset;
#else
    current = -( readVoltage( ivalue ) * acs712Multiplier + acs712Offset ) * currentMultiplier + currentOffset;
#endif
}

Параметры фильтрации ШИМ и номиналы компаратора напряжения (проверялось при 9.8в ШИМ 50%):
20кГц, 3.3мкФ, 5.6кОм (пост вр 0.02с)
Пульсации на нагрузку 20кОм 70мВ (2.1%)
ОУ+ 10.0/10.0кОм
ОУ- 13.0/910.0 (12.0/820.0) 

По токовому компаратору печально: уровни слишком малы.




 вляпать "+2" и "+1"...

В общем, если кому надо: (файл "TFT_ILI9163C.cpp" из пакета "TFT_ILI9163C_master.zip"

1018: void TFT_ILI9163C::setAddr(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1){ 
1019:   #if defined(__MK20DX128__) || defined(__MK20DX256__) 
1020:       SPI.beginTransaction(ILI9163C_SPI); 
1021:       _setAddrWindow(x0,y0,x1,y1); 
1022:   #else 
1023:       setAddrWindow(x0+2,y0+1,x1+2,y1+1); //ВОТ ПРАВКА +2 и +1 
1024:   #endif 

Вроде заработало как надо, пиксели на месте))

10:33 21.12.2019
Инициализация состояний из .h перенесена в .cpp - в cccvfsm, не закончено
Выводы дисплея назначаются в moled.h (раньше в mboard.h)
DATA:    [=         ]  13.7% (used 44920 bytes from 327680 bytes)
PROGRAM: [========  ]  78.6% (used 1029998 bytes from 1310720 bytes)

Adafruit_ST77xx.cpp - добавлены +2 и +4 для смещения
void Adafruit_ST77xx::setAddrWindow(uint16_t x, uint16_t y, uint16_t w,
  uint16_t h) {
  x += _xstart + 2;                 - ОК
  y += _ystart + 4;                 - ОК
  uint32_t xa = ((uint32_t)x << 16) | (x+w-1);
  uint32_t ya = ((uint32_t)y << 16) | (y+h-1); 

Для поворота на 180 добавлено в setup() :
    tft.setRotation(2);             - ОК

12:00 22.12.2019
Новые кнопки, в режимах - через case

07:27 27.12.2019
Новый проект под GitHub
Открыт в E:\GitHub\MORO2020

20:28 12.01.2020
Корректировка про V43
Отключение RGB светодиода     - ОК
Сетевой фильтр                - ОК
6в, 3,3в                      - ОК
OLED (софт)                   - ОК
USB                           - ОК
Измерение температуры         - ОК
Вентилятор                    - ОК
Кнопки - есть, но не проверено
Напряжение - всегда 0
Ток - нет датчика

17:50 14.01.2020
Измерение напряжения          - ОК
Измерение тока по IO33(712)   - OK
Кнопки                        - ОК

21:53 18.01.2020
Датчик тока                   - ОК
Ошибка разводки ACS712 (земля)
Пробный заряд                 - ОК

21:14 26.01.2020
Режим настроек product.h,cpp
начало

Надо будет попробовать
http://forum.amperka.ru/threads/Хаос-в-значениях-АЦП-esp32.19985/

20:17 29.01.2020
Проверка линейности регулятора напряжения
online https://planetcalc.ru/5992/
X= 64 128 192 256 320 384 448 512 576 640 704 768 832 896 960 1024
Y= 1.20 2.403 3.607 4.81 6.01 7.22 8.42 9.62 10.82 12.03 13.23 14.43 15.63 16.84 18.04 19.23 (FLUKE87)
Линейная регрессия                  y=0.01878892x + 0.00007500  
Средняя ошибка аппроксимации, %     0.04073146 
Квадратичная регрессия              y=−0.00000002x^2 + 0.01881515x − 0.00496071 
Средняя ошибка аппроксимации, %     0.02590073 

Калибровка измерителя напряжения в двух диапазонах
(Убрать старые voltageMultiplier и voltageOffset   1 и 0 соответственно  )

0...6v



4...20v
